<?xml version="1.0"?>
<robot name="new_fyp_kal_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Define robot constants -->
  <xacro:property name="base_width" value="0.14"/>
  <xacro:property name="base_length" value="0.19"/>
  <xacro:property name="base_height" value="0.035"/>
  <xacro:property name="top_layer_height" value="0.005"/>
  <xacro:property name="standoff_radius" value="0.0025"/>
  <xacro:property name="standoff_height" value="0.06"/>
  <xacro:property name="wheel_radius" value="0.06"/>
  
  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>
  
  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="White">
        <color rgba="1.0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="5" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>
  
  <!-- Top Layer -->
  <link name="top_layer">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${top_layer_height}"/>
      </geometry>
      <material name="Red">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${top_layer_height}"/>
      </geometry>
    </collision>
  <xacro:box_inertia m="1" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>
  
  <!-- Standoffs -->
  <xacro:macro name="standoff" params="prefix x y">
    <link name="${prefix}_standoff">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${standoff_radius}" length="${standoff_height}"/>
        </geometry>
        <material name="Gold">
          <color rgba="1 0.843 0 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="${standoff_radius}" length="${standoff_height}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="0.005" r="${standoff_radius}" h="${standoff_height}"/>
    </link>
    <joint name="${prefix}_standoff_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_standoff"/>
      <origin xyz="${x} ${y} ${(base_height/2 + standoff_height/2)}" rpy="0 0 0"/>
    </joint>
  </xacro:macro>
  
  <!--Instances of standoffs-->
  <xacro:standoff prefix="front_left" x="${base_length/2}" y="${base_width/2}"/>
  <xacro:standoff prefix="front_right" x="${base_length/2}" y="${-base_width/2}"/>
  <xacro:standoff prefix="rear_left" x="${-base_length/2}" y="${base_width/2}"/>
  <xacro:standoff prefix="rear_right" x="${-base_length/2}" y="${-base_width/2}"/>
  
  <!-- Top Layer Joint -->
  <joint name="top_layer_joint" type="fixed">
    <parent link="base_link"/>
    <child link="top_layer"/>
    <origin xyz="0 0 ${(base_height + standoff_height - 0.02)}" rpy="0 0 0"/>
  </joint>
  
  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-wheel_radius}" rpy="0 0 0"/>
  </joint>
  
</robot>  
